import { XAPI } from '../XAPI';
import { TradeRecord, TradeRecordParams } from '../TradeRecord';
export declare class LimitPosition extends TradeRecord {
    private XAPI;
    constructor(XAPI: XAPI, params: TradeRecordParams);
    close(customComment?: string): {
        transaction: Promise<{
            transaction: import("../Transaction").Transaction<Record<string | number, any>, Record<string | number, any>>;
            data: {
                returnData: import("../../interface/Response").tradeTransactionResponse;
                jsonReceived: import("../../..").Time;
                json: string;
            };
        }>;
        transactionStatus: Promise<import("../../interface/Response").tradeTransactionStatusResponse | {
            customComment: string | null;
            message: string | null;
            order: number;
            requestStatus: import("../../interface/Enum").REQUEST_STATUS_FIELD | null;
        }>;
    };
    modify(params: {
        tp?: number;
        sl?: number;
        price?: number;
        expiration?: number;
        customComment?: string;
    }): {
        transaction: Promise<{
            transaction: import("../Transaction").Transaction<Record<string | number, any>, Record<string | number, any>>;
            data: {
                returnData: import("../../interface/Response").tradeTransactionResponse;
                jsonReceived: import("../../..").Time;
                json: string;
            };
        }>;
        transactionStatus: Promise<import("../../interface/Response").tradeTransactionStatusResponse | {
            customComment: string | null;
            message: string | null;
            order: number;
            requestStatus: import("../../interface/Enum").REQUEST_STATUS_FIELD | null;
        }>;
    };
}

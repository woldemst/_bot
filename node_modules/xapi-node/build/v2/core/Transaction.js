"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Transaction = void 0;
const createPromise_1 = require("../utils/createPromise");
const Time_1 = require("../utils/Time");
class Transaction {
    constructor(state) {
        const { resolve, reject, promise } = (0, createPromise_1.createPromise)();
        this._resolve = resolve;
        this._reject = reject;
        this._promise = promise;
        this.state = Object.assign({ createdAt: new Time_1.Time() }, state);
    }
    get promise() {
        return this._promise;
    }
    setState(state) {
        this.state = Object.assign(Object.assign({}, this.state), state);
    }
    resolve(data) {
        if (!this.state.resolved && !this.state.rejected) {
            this.state.resolved = new Time_1.Time();
            return this._resolve({ transaction: this, data });
        }
        return new Error('already resolved or rejected');
    }
    reject(error) {
        if (!this.state.resolved && !this.state.rejected) {
            this.state.rejected = new Time_1.Time();
            if (typeof error === 'object' && error.error instanceof Error) {
                return this._reject(Object.assign(Object.assign({}, error), { transaction: this }));
            }
            else {
                return this._reject({ transaction: this, error });
            }
        }
        return new Error('already resolved or rejected');
    }
}
exports.Transaction = Transaction;
//# sourceMappingURL=Transaction.js.map
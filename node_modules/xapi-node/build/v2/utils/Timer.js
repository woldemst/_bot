"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Timer = void 0;
const createPromise_1 = require("./createPromise");
class Timer {
    constructor() {
        this.interval = null;
        this.timeout = null;
    }
    setInterval(callback, ms) {
        this.clear();
        this.interval = setInterval(() => {
            try {
                callback();
            }
            catch (e) { }
        }, ms);
    }
    setTimeout(callback, ms) {
        this.clear();
        const p = (0, createPromise_1.createPromise)();
        const timeoutId = setTimeout(() => {
            try {
                const result = callback();
                if (result instanceof Promise) {
                    result.then((data) => {
                        if (timeoutId === this.timeout) {
                            this.timeout = null;
                        }
                        p.resolve(data);
                    });
                    result.catch(e => {
                        if (timeoutId === this.timeout) {
                            this.timeout = null;
                        }
                        p.reject(e);
                    });
                }
                else if (timeoutId === this.timeout) {
                    this.timeout = null;
                    p.resolve(undefined);
                }
            }
            catch (e) {
                p.reject(e);
            }
        }, ms);
        this.timeout = timeoutId;
        return p.promise;
    }
    clear() {
        if (this.timeout !== null) {
            clearTimeout(this.timeout);
            this.timeout = null;
        }
        if (this.interval !== null) {
            clearInterval(this.interval);
            this.interval = null;
        }
    }
    isNull() {
        return this.interval === null && this.timeout === null;
    }
}
exports.Timer = Timer;
//# sourceMappingURL=Timer.js.map